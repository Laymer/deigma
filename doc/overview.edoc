@title deigma
@doc

<a target="_parent" href="https://hex.pm/packages/deigma" alt="Hex.pm Package">
    <img src="https://img.shields.io/hexpm/v/deigma.svg?style=flat"/></a>
<a target="_parent" href="https://travis-ci.org/g-andrade/deigma" alt="Build Status">
    <img src="https://travis-ci.org/g-andrade/deigma.png?branch=master"/></a>

`deigma' is a library for Erlang/OTP and Elixir that allows you to sample events within continuous 1 second windows[1] based on rate limits.

The sampling rate is steadily adjusted so that the events that seep through are representative
of what's happening in the system.

[*] As far as the monotonic clock resolution goes.

<h4>Example</h4>

There's heavy duty a web service; we want to report metrics on inbound http requests
to <a target = "_parent" href="https://github.com/etsy/statsd">StatsD</a> service
over UDP while minimising the risk of dropped datagrams due to too many events.

For this, we can downsample the reported metrics and determine the real sampling rate
using `deigma'.

<h5>1. Start a deigma instance</h5>

<pre lang="erlang" class="erlang">
Category = metrics,
{ok, _Pid} = deigma:start(Category).
</pre>

<h5>2. Sample events based on a maximum rate</h5>

<pre lang="erlang" class="erlang">
Category = metrics,
EventType = http_request,
MaxRate = 100,
case deigma:ask(Category, EventType, [{max_rate, MaxRate}]) of
    {sample, SampleRate} ->
        your_metrics:report(counter, EventType, +1, SampleRate);
    {drop, _SampleRate} ->
        ok
end.
</pre>

<ul>
    <li><a href="#categories">`Category'</a> must be an atom</li>
    <li><a href="#event_windows">`EventType'</a> can be any term</li>
    <li><a href="#rate_limiting">`MaxRate'</a> is the maximum number of events
        per second we want to sample (defaults to 100)
    </li>
    <li>`SampleRate' is a floating point number between 0.0 and 1.0 representing
        the percentage of events that were sampled during the last 1000 milliseconds,
        including the event reported just now.
    </li>
</ul>

<h4>Documentation and Reference</h4>

Documentation is hosted on <a target="_parent" href="https://hexdocs.pm/deigma/">HexDocs</a>.

<h4>Tested setup</h4>

<ul>
<li>Erlang/OTP 18 or higher</li>
<li>rebar3</li>
</ul>

<h4 id="categories">On categories</h4>

Each `Category' represents an independent group of events and is managed separately;
categories can be launched under your own supervision tree (using `:child_spec/1' or
`:start_link/1') as well as under the `deigma' application (using `:start/1').

Categories launched under `deigma' can be stopped using `:stop/1'.

<h4 id="event_windows">On event windows</h4>

Within the context of each `Category', each distinct `EventType' will be handled
under dedicated event windows which are owned by independent processes.

These processes are created on-demand as new `EventType' values get sampled,
and stopped after 1000 milliseconds of inactivity.

<h4 id="rate_limiting">On rate limits</h4>

Each time a new event is reported, `MaxRate' is applied according to
how many events were sampled so far during the previous 1000 milliseconds;
if the limit has been or is about to be exceeded, the event gets dropped.

<h4>License</h4>

MIT License

Copyright (c) 2018 Guilherme Andrade

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

@end
